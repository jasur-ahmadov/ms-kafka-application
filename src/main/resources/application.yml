app:
  kafka:
    producer:
      topic: "student-topic"

spring: # Spring Boot configuration
  messages: # internationalization messages
    basename: i18n/messages # internationalization message file location
  datasource: # database connection
    driver-class-name: com.mysql.cj.jdbc.Driver # MySQL driver class
    url: jdbc:mysql://${DB_CONNECTION_IP:localhost}:${DB_CONNECTION_PORT:3306}/kafkadb?createDatabaseIfNotExist=true # database URL
    username: ${DB_CONNECTION_USERNAME:root} # database username
    password: ${DB_CONNECTION_PASSWORD:2000} # database password
  jpa:
    hibernate:
      ddl-auto: update # Update the schema if necessary
  kafka: # Apache Kafka configuration
    producer: # Kafka producer configuration
      bootstrap-servers: ${KAFKA_HOST_NAME:localhost}:9092 # Kafka broker URL
      key-serializer: org.apache.kafka.common.serialization.StringSerializer # key serializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer # value serializer
    consumer:
      bootstrap-servers: ${KAFKA_HOST_NAME:localhost}:${KAFKA_PORT:9092} # Kafka broker URL
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer # Deserializer for message keys.
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer # Deserializer for message values.
      group-id: kafka-group # KafkaConsumer group identifier.
      auto-offset-reset: earliest # Reset offset to earliest for new consumer groups to view all messages
    properties: # Kafka properties
      acks: all # acknowledge all messages ~ higher latency but no message loss
      retries: 10 # retry 10 times
      retry.backoff.ms: 1000 # retry every 1 second
      max.block.ms: 20000 # Wait for 20 seconds to throw a timeout exception if there is no space available in the Kafka broker to immediately accept the message
      delivery.timeout.ms: 30000 # Wait for 30 seconds to throw a timeout exception if the message is not delivered to the Kafka broker

resilience4j:
  circuitbreaker:
    instances:
      getAllStudents:
        # configs for close state
        sliding-window-type: count_based
        failure-rate-threshold: 50.0 # when 50% of requests does not work
        sliding-window-size: 6 # total allowed requests in a row
        # configs for open state
        wait-duration-in-open-state: 10s # wait 10 seconds
        # configs for half-open state
        automatic-transition-from-open-to-half-open-enabled: true # will be half-opened
        permitted-number-of-calls-in-half-open-state: 2 # 2 more attempts allowed every 15 seconds
        max-wait-duration-in-half-open-state: 15000